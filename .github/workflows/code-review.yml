name: Code Review

on:
  workflow_dispatch:
  pull_request_target:
    branches: [main]
  pull_request:
    branches:
      - 'review*'
      - 'main'
    types: [opened, synchronize]
  push:
    branches:
      - 'review*'

jobs:
  run-code-review:
    runs-on: ubuntu-latest
    env:
      FMT_CHECK_RESULT: fmt_check.txt
      FMT_CODE_RESULT: fmt_code.txt
      UNIT_TEST_RESULT: unit_test.txt
      MIRI_TEST_RESULT: miri_test.txt
      SEC_AUDIT_RESULT: sec_result.txt
      CLIPPY_RESULT: clippy_result.txt

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          token: ${{secrets.GITHUB_TOKEN}}
      

      - name: Install Toolchain (Rust Nightly)
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          components: rustfmt, clippy, miri
          
      - name: Check Formatting
        id: check-formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check
        continue-on-error: true

      - name: Cache Format Check For Later
        run: |
          echo "(*) Caching Format Check Output"
          echo "Format Check: ${{steps.check-formatting.outcome}}, Results: ${{steps.check-formatting.outputs}}" >> ${{env.FMT_CHECK_RESULT}}

      - name: If Check Fails, Then Format Code
        id: format-code
        uses: actions-rs/cargo@v1
        with:
          command: fmt
        if: failure() #only run this if check failed.
        
      - name: Cache Format Code For Later
        run: |
          echo "(*) Caching Format Code"
          echo "Format Code: ${{steps.format-code.outcome}}, Results: ${{steps.format-code.outputs}}" >> ${{env.FMT_CODE_RESULT}}